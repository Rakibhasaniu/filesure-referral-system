version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: filesure-mongodb
    restart: unless-stopped
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - filesure-network
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017'}]}) }" | mongosh
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: filesure-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: mongodb://mongodb:27017/filesure?replicaSet=rs0
      JWT_ACCESS_SECRET: your-jwt-secret-change-in-production
      JWT_ACCESS_EXPIRES_IN: 1d
      JWT_REFRESH_SECRET: your-refresh-secret-change-in-production
      JWT_REFRESH_EXPIRES_IN: 30d
      BCRYPT_SALT_ROUNDS: 10
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - filesure-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:5000/api/v1
    container_name: filesure-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - filesure-network

volumes:
  mongodb_data:
    driver: local

networks:
  filesure-network:
    driver: bridge
