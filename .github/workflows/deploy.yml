name: Test and Deploy to Fly.io

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Start MongoDB with Replica Set
        run: |
          docker run -d --name mongodb \
            -p 27017:27017 \
            mongo:6.0 \
            --replSet rs0 \
            --bind_ip_all

          # Wait for MongoDB to start
          sleep 5

          # Initialize replica set
          docker exec mongodb mongosh --eval "rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]})"

          # Wait for replica set to be ready
          sleep 10

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Run tests
        working-directory: ./backend
        run: npm test
        env:
          NODE_ENV: test
          USE_REAL_DB: true
          TEST_DATABASE_URL: mongodb://localhost:27017/filesure_test?replicaSet=rs0
          JWT_ACCESS_SECRET: test-secret-key
          JWT_ACCESS_EXPIRES_IN: 1d
          JWT_REFRESH_SECRET: test-refresh-secret
          JWT_REFRESH_EXPIRES_IN: 30d
          BCRYPT_SALT_ROUNDS: 10

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Backend
        run: flyctl deploy --remote-only
        working-directory: ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Frontend
        run: flyctl deploy --remote-only
        working-directory: ./frontend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}